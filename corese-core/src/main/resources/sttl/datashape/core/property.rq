#
# evaluate sh:property sh:path of shape ?sh
# ?list is the list of target nodes of shape ?sh
#
prefix sh: <http://www.w3.org/ns/shacl#> 

template (?shape, ?sh, ?vis, ?list) {
   sh:safe(?shape, ?sh, ?suc)
}
where {
    graph ?shape {  
        ?sh sh:property ?cst  
        ?cst sh:path ?p 
        filter not exists { ?cst sh:deactivated true }
        # use case: sh:property [ sh:path p ; sh:property pp ]
        # filter not exists { ?sh sh:path ?pp }
    }
    
    bind (sh:path(?shape, ?cst, ?vis, ?list, ?p) as ?suc)
}


