name: Publish GitHub Release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '11'
          cache: 'gradle'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build project
        run: ./gradlew build

      - name: Extract Changelog for Release
        id: changelog
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          VERSION="${TAG_NAME#v}"
          sed -n "/## Version $VERSION/,/## Version/p" CHANGELOG.md | sed '$d' > release_notes.md
        env:
          GITHUB_REF: ${{ github.ref }}

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          release_name: "Release ${{ github.ref_name }}"
          body_path: release_notes.md
          draft: true
          prerelease: false

      - name: Upload Release Assets
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          for file in ./build/libs/*.jar; do
            if [[ -f "$file" ]]; then
              curl -s -X POST \
                -H "Authorization: token $GITHUB_TOKEN" \
                -H "Content-Type: $(file --mime-type -b "$file")" \
                --data-binary @"$file" \
                "${{ steps.create_release.outputs.upload_url }}?name=$(basename "$file")"
            fi
          done
