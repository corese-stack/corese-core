name: Release to Maven Central

# Trigger the workflow when a tag matching the version pattern (e.g., v4.6.0) is pushed
on:
  push:
    tags:
      - "v*.*.*"

jobs:
  release:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Java Development Kit (JDK) version 11, as required by the project
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  # Use Temurin JDK distribution
          java-version: '11'       # Specify JDK version 11
          cache: 'gradle'          # Cache Gradle dependencies

      # Step 3: Cache Gradle dependencies to improve build speed on subsequent runs
      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: ~/.gradle/caches
          # Generate a cache key based on OS and Gradle configuration files
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # Step 4: Set up GPG signing key for signing artifacts
      - name: Set up GPG signing key
        env:
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}
        run: |
          # Decode the base64-encoded GPG signing key and import it non-interactively
          echo "$GPG_SIGNING_KEY" | base64 --decode | gpg --batch --yes --pinentry-mode loopback --import
          # List imported GPG keys to confirm successful import
          gpg --list-keys

      # Step 5: Build the project and publish artifacts to Sonatype in "staging" mode (not yet released)
      - name: Build and publish to Sonatype (staging only)
        env:
          OSSRH_USERNAME: ${{ secrets.OSSRH_USERNAME }}                 # Sonatype OSSRH username
          OSSRH_PASSWORD: ${{ secrets.OSSRH_PASSWORD }}                 # Sonatype OSSRH password
          GPG_SIGNING_KEY: ${{ secrets.GPG_SIGNING_KEY }}               # GPG signing key
          GPG_SIGNING_PASSPHRASE: ${{ secrets.GPG_SIGNING_PASSPHRASE }} # GPG signing passphrase
        run: |
          export GPG_SIGNING_KEY="${{ secrets.GPG_SIGNING_KEY }}"
          export GPG_SIGNING_PASSPHRASE="${{ secrets.GPG_SIGNING_PASSPHRASE }}"
          ./gradlew publishToSonatype

      - name: Manual Release Reminder
        run: echo "The artifacts have been staged on Sonatype. Please log in to Sonatype Nexus to close and release the staging repository manually."
